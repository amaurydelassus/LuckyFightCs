@page "/fight"
@inject HttpClient Http
@using Models
@inject NavigationManager Navigation
@attribute [Authorize]
<h1>Fight !</h1>

<div class="row justify-content-md-center align-items-end">
    @if (@heros == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="col-3 text-center">
            <img src="./carte.png" class="img-fluid" alt="Responsive image">
            <div>
                <tbody>
                    <tr>
                        <th scope="row">Nom</th>
                        <td>@champion.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">PV</th>
                        <td>@champion.Pv</td>
                    </tr>
                    <tr>
                        <th scope="row">Attaque</th>
                        <td>@champion.Atk</td>
                    </tr>
                    <tr>
                        <th scope="row">Nombre de Combats</th>
                        <td>@champion.NbFights</td>
                    </tr>
                </tbody>
            </div>
        </div>
        <div class="col-2 text-center">
            <img src="./vs.png" class="img-fluid" alt="Responsive image">
        </div>
        if (@heros.Count() != 0)
        {
            @for (@i = 0; i < heros.Count(); i++)
            {
                var @linkTrain = $"fight/{@heros[i].Id}";
                if (@heros[i].NbFights == 0)
                {
                    var @id = @heros[i].Id;
                    <div class="col-2 text-center">
                        <img src="./carte.png" class="img-fluid" alt="Responsive image">
                        <div>
                            <tbody>
                                <tr>
                                    <th scope="row">Nom</th>
                                    <td>@heros[i].Name</td>
                                </tr>
                                <tr>
                                    <th scope="row">PV</th>
                                    <td>@heros[i].Pv</td>
                                </tr>
                                <tr>
                                    <th scope="row">Attaque</th>
                                    <td>@heros[i].Atk</td>
                                </tr>
                                <tr>
                                    <th scope="row">Nombre de Combats</th>
                                    <td>@heros[i].NbFights</td>
                                </tr>
                            </tbody>
                        </div>
                        <div>
                            <button type="button" class="btn btn-lg text-light" style="background-color:#AD0000;border-color: #9B0000;"
                                @onclick="()=>DoFight(id)"><img src="./logo.png" class="img-fluid" alt="Responsive image"></button>

                        </div>
                    </div>
                }
            }
        }
    }
</div>


@code {

    private Hero champion;

    private Hero[] heros;
    private User user;
    private string email = "cc";
    private int i = 0;



    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"https://localhost:5001/User/get/{email}");
        champion = await Http.GetFromJsonAsync<Hero>($"https://localhost:5001/Hero/champion");
        heros = await Http.GetFromJsonAsync<Hero[]>("https://localhost:5001/Hero/myheroes/" + user.Id);
    }


    private async void DoFight(int id)
    {
        Navigation.NavigateTo("fight/"+id);
    }
}