@page "/train"
@inject HttpClient Http
@using Models
@inject NavigationManager Navigation
@attribute [Authorize]
<h1>S'entraîner</h1>
<div class="row justify-content-md-center align-items-end">
    @if (choix)
    {
        @if (@heroes == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            if (@heroes.Count() != 0)
            {
                @for (@i = 0; i < heroes.Count(); i++)
                {
                    var @id = i;
                    <div class="col-2 text-center">
                        <img src="./carte.png" class="img-fluid" alt="Responsive image">
                        <div>
                            <tbody>
                                <tr>
                                    <th scope="row">Nom</th>
                                    <td>@heroes[i].Name</td>
                                </tr>
                                <tr>
                                    <th scope="row">PV</th>
                                    <td>@heroes[i].Pv</td>
                                </tr>
                                <tr>
                                    <th scope="row">Attaque</th>
                                    <td>@heroes[i].Atk</td>
                                </tr>
                                <tr>
                                    <th scope="row">Nombre de Combats</th>
                                    <td>@heroes[i].NbFights</td>
                                </tr>
                            </tbody>
                        </div>
                        <div>
                            @if (@heroes[i].NbFights > 0)
                            {
                                <div>Désolé, il a déja eu sa chance !</div>
                            }
                            else
                            {
                                <button type="button" class="btn btn-danger" @onclick="()=>MakeChoice(id)">Play</button>
                            }

                        </div>
                    </div>

                }
            }
        }
    }
    else
    {
        if (trying)
        {
            <p> + @currentCount points de vie !</p>
            <button class="btn btn-warning font-weight-bold" @onclick="IncrementCount">S'entraîner</button>
        }
        else
        {
            <p class="font-weight-bold text-success">Tu as gagné @currentCount points de vie !</p>
            <button class="btn btn-warning font-weight-bold" @onclick="()=>Update()">Ok @heroId</button>
            <button type="button" class="btn btn-danger" @onclick="()=>MakeChoice(heroId)">RePlay</button>
        }

    }
</div>


@code {
    private int currentCount = 0;
    private bool choix = true;
    private int heroId = 0;
    private bool trying = true;

    private Hero[] heroes;
    private User user;
    private string email = "cc";
    private int i = 0;



    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"https://luckyfightcs.alwaysdata.net/User/get/{email}");
        heroes = await Http.GetFromJsonAsync<Hero[]>("https://luckyfightcs.alwaysdata.net/Hero/myheroes/" + user.Id);
    }

    private void IncrementCount()
    {
        currentCount++;
    }
    protected async Task Update()
    {
        var hero = heroes[heroId];
        hero.Pv = currentCount;
        var result = await Http.PutAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/update/" + hero.Id, hero);
        if (result.IsSuccessStatusCode)
        {
            choix = true;
        }
    }


    private async void MakeChoice(int id)
    {
        trying = true;
        currentCount = 0;
        heroId = id;
        choix = false;
        await Task.Delay(5000);
        trying = false;
    }
}