@page "/fight/{id:int}"
@inject HttpClient Http
@using Models
@inject NavigationManager Navigation
@attribute [Authorize]
<h1>Fight !</h1>
@if (@hero == null || @champion == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="row justify-content-md-center align-items-end">
        <div class="col-3 text-center">
            <img src="./carte.png" class="img-fluid" alt="Responsive image">
            <div>
                <tbody>
                    <tr>
                        <th scope="row">Nom</th>
                        <td>@champion.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">PV</th>
                        <td>@pvChamp</td>
                    </tr>
                    <tr>
                        <th scope="row">Attaque</th>
                        <td>@champion.Atk</td>
                    </tr>
                    <tr>
                        <th scope="row">Nombre de Combats</th>
                        <td>@champion.NbFights</td>
                    </tr>
                </tbody>
            </div>
        </div>
        <div class="col-2 text-center">
            <img src="./vs.png" class="img-fluid" alt="Responsive image">
            <br><br><br><br>
            @if (choix)
            {
                <button type="button" class="btn btn-lg text-light" style="background-color:#AD0000;border-color: #9B0000;"
            @onclick="Fight"><img src="./logo.png" class="img-fluid" alt="Responsive image"></button>
            }
            else
            {
                <br><br>
            }
        </div>
        <div class="col-3 text-center">
            <img src="./carte.png" class="img-fluid" alt="Responsive image">
            <div>
                <tbody>
                    <tr>
                        <th scope="row">Nom</th>
                        <td>@hero.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">PV</th>
                        <td>@pvHero</td>
                    </tr>
                    <tr>
                        <th scope="row">Attaque</th>
                        <td>@hero.Atk</td>
                    </tr>
                    <tr>
                        <th scope="row">Nombre de Combats</th>
                        <td>@hero.NbFights</td>
                    </tr>
                </tbody>
            </div>
        </div>
    </div>
}

@if (!choix)
{
    if (trying)
    {
        if (yourTurn)
        {
            <div class="row justify-content-md-center align-items-end">
                <p>@damage</p>
            </div>
            <div class="row justify-content-md-center align-items-end">
                <button class="btn btn-warning font-weight-bold" @onclick="()=>hit()">A ton tour - Continuer</button>
            </div>

        }
        else
        {
            <div class="row justify-content-md-center align-items-end">
                <p>@damage</p>
            </div>
            <div class="row justify-content-md-center align-items-end">
                <button class="btn btn-warning font-weight-bold" @onclick="()=>hit()">A moi - Continuer</button>
            </div>
        }
    }
    else
    {
        if (@win)
        {
            <div class="row justify-content-md-center align-items-end">
            <p class="font-weight-bold text-success">Félicitation tu es le nouveau champion !</p>
            </div>
        }
        else
        {
            <div class="row justify-content-md-center align-items-end">
            <p>Tu as perdu... La honte s'abat sur toi et ta famille...</p>
            <button class="btn btn-warning font-weight-bold" @onclick="()=>Return()">Retour à l'accueil</button>
            <button type="button" class="btn btn-danger" @onclick="()=>Delete()">Supprimer mon héro</button>
            </div>
        }
    }
}

@code {
    [Parameter]
    public int id { get; set; }
    private bool win = false;
    private int currentCount = 0;
    private bool choix = true;
    private bool trying = true;
    private bool yourTurn = false;
    private string damage = "";
    private Hero champion;
    private Hero hero;
    private int degat = 0;
    private int pvChamp;
    private int pvHero;
    Random rnd = new Random();
    protected override async Task OnInitializedAsync()
    {
        champion = await Http.GetFromJsonAsync<Hero>($"https://luckyfightcs.alwaysdata.net/Hero/champion");
        hero = await Http.GetFromJsonAsync<Hero>($"https://luckyfightcs.alwaysdata.net/Hero/onehero/" + id);
        pvHero = hero.Pv; 
        pvChamp = champion.Pv;
        if(hero.Id == champion.Id)
        {
            Navigation.NavigateTo("/mesperso"); 
        } 
    }

    private async Task Return()
    {
        Navigation.NavigateTo("/mesperso");
    }

    protected async Task Delete()
    {
        var result = await Http.DeleteAsync("https://luckyfightcs.alwaysdata.net/Hero/delete/" + id);
        if (result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/mesperso");
        }
    }
    private async void Fight()
    {
        choix = false;
        trying = true;
        pvChamp = champion.Pv;
        pvHero = hero.Pv;
        //incrémenter les nombres de fights
        hero.NbFights = hero.NbFights + 1;
        champion.NbFights = champion.NbFights + 1;
        var resultHero = await Http.PostAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/update/" + id, hero);
        var resultChamp = await Http.PostAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/update/" + champion.Id,
        champion);
    }
    private async void hit()
    {
        degat = hero.Atk + rnd.Next(6);
        if (yourTurn)
        {
            damage = $"Ton héro {hero.Name} inflige {degat} au champion !";
            pvChamp = pvChamp - degat;
            yourTurn = false;
        }
        else
        {
            damage = $"Le champion {champion.Name} inflige {degat} à ton héro !";
            pvHero = pvHero - degat;
            yourTurn = true;
        }
        if (pvChamp * pvHero <= 0)
        {
            if(pvChamp <= 0)
            {
                win = true;
                hero.IsChampion = true;
                champion.IsChampion = false;
                var resultHero = await Http.PutAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/update/" + hero.Id, hero);
                var resultChamp = await Http.PutAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/update/" + champion.Id, champion);
            }
            trying = false ; 
        }
    }
}