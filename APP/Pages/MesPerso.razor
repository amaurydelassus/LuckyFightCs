@page "/mesperso"
@inject HttpClient Http
@using APP.Models
@inject NavigationManager Navigation
@attribute [Authorize]
<h1>Mes perso</h1>
@if (@heros == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (@heros.Count() != 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nom</th>
                    <th>PV</th>
                    <th>Attaque</th>
                    <th>Nombre de Combats</th>
                </tr>
            </thead>
            <tbody>
                @for (@i = 0; i < heros.Count(); i++)
                {
                    var @linkTrain = $"train/{@heros[i].Id}";
                    var @id = @heros[i].Id;
                    <tr>
                        <td>@heros[i].Name</td>
                        <td>@heros[i].Pv</td>
                        <td>@heros[i].Atk</td>
                        <td>@heros[i].NbFights</td>
                        <td>
                            @if (@heros[i].NbFights == 0)
                            {
                                <NavLink class="nav-link text-danger" href=@linkTrain>
                                    <span class="oi oi-heart" aria-hidden="true"></span>
                                </NavLink>

                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-lg text-light"
                    style="background-color:#AD0000;border-color: #9B0000;" @onclick="()=>delete(id)"><span
                        class="oi oi-minus" aria-hidden="true"></span></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div class="row justify-content-md-center align-items-end">
        <div class="col-2 text-center">
            <p>
                <input @bind="HeroName" />
            </p>
        </div>

        <div class="col-2 text-center">
            <p>
                <button class="btn btn-primary" @onclick="addHero">Ajouter un Heros</button>
            </p>
        </div>
    </div>
}


@code {

    private Hero[] heros;
    private User user;
    private string email = "cc";
    private int i = 0;
    private string HeroName;



    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"https://localhost:5001/User/get/{email}");
        heros = await Http.GetFromJsonAsync<Hero[]>("https://localhost:5001/Hero/myheroes/" + user.Id);
    }

    protected async Task delete(int id)
    {
        var result = await Http.DeleteAsync("https://localhost:5001/Hero/delete/" + id);
        if (result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/mesperso", true);
        }
    }

    protected async Task addHero()
    {
        Hero hero = new Hero();
        hero.Name = HeroName;
        hero.User = user;
        hero.Icon = "icon";
        var result = await Http.PostAsJsonAsync("https://localhost:5001/Hero/new", hero);
        if (result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/mesperso", true);
        }
    }
}