@page "/mesperso"
@inject HttpClient Http
@using APP.Models
@inject NavigationManager Navigation
@attribute [Authorize]
<h1>Mes perso</h1>
@if (@heroes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (@heroes.Count() != 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nom</th>
                    <th>PV</th>
                    <th>Attaque</th>
                    <th>Nombre de Combats</th>
                </tr>
            </thead>
            <tbody>
                @for (@i = 0; i < heroes.Count(); i++)
                {
                    var @linkTrain = $"train/{@heroes[i].Id}";
                    var @id = @heroes[i].Id;
                    <tr>
                        <td>@heroes[i].Name</td>
                        <td>@heroes[i].Pv</td>
                        <td>@heroes[i].Atk</td>
                        <td>@heroes[i].NbFights</td>
                        <td>
                            @if (@heroes[i].NbFights == 0)
                            {
                                <NavLink class="nav-link text-danger" href=@linkTrain>
                                    <span class="oi oi-heart" aria-hidden="true"></span>
                                </NavLink>

                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-lg text-light"
                    style="background-color:#AD0000;border-color: #9B0000;" @onclick="()=>Delete(id)"><span
                        class="oi oi-minus" aria-hidden="true"></span></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div class="row justify-content-md-center align-items-end">
        <div class="col-2 text-center">
            <p>
                <input @bind="heroName" />
            </p>
        </div>

        <div class="col-2 text-center">
            <p>
                <button class="btn btn-primary" @onclick="AddHero">Ajouter un heros</button>
            </p>
        </div>
    </div>
}


@code {

    private Hero[] heroes;
    private User user;
    private string email = "cc";
    private int i = 0;
    private string heroName;



    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"https://luckyfightcs.alwaysdata.net/User/get/{email}");
        heroes = await Http.GetFromJsonAsync<Hero[]>("https://luckyfightcs.alwaysdata.net/Hero/myheroes/" + user.Id);
    }

    protected async Task Delete(int id)
    {
        var result = await Http.DeleteAsync("https://luckyfightcs.alwaysdata.net/Hero/delete/" + id);
        if (result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/mesperso", true);
        }
    }

    protected async Task AddHero()
    {
        Hero hero = new Hero();
        hero.Name = heroName;
        hero.User = user;
        hero.Icon = "icon";
        var result = await Http.PostAsJsonAsync("https://luckyfightcs.alwaysdata.net/Hero/new", hero);
        heroes = await Http.GetFromJsonAsync<Hero[]>("https://luckyfightcs.alwaysdata.net/Hero/myheroes/" + user.Id);
    }
}